<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh.module.dao.IdcardValidateMapper">
  <resultMap id="BaseResultMap" type="com.zh.module.entity.IdcardValidate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="identificationnumber" jdbcType="VARCHAR" property="identificationnumber" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, name, identificationnumber, state, task_id, create_time, update_time
  </sql>
  <insert id="insert" parameterType="com.zh.module.entity.IdcardValidate">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into idcard_validate (user_id, name, identificationnumber, 
      state, task_id, create_time, 
      update_time)
    values (#{userId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{identificationnumber,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{taskId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zh.module.entity.IdcardValidate">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into idcard_validate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="identificationnumber != null">
        identificationnumber,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="identificationnumber != null">
        #{identificationnumber,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zh.module.entity.IdcardValidate">
    update idcard_validate
    set user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      identificationnumber = #{identificationnumber,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      task_id = #{taskId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zh.module.entity.IdcardValidate">
    update idcard_validate
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="identificationnumber != null">
        identificationnumber = #{identificationnumber,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from idcard_validate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from idcard_validate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from idcard_validate
    where 1=1 
    <if test="userId != null">
       and  user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="name != null and name != ''">
       and  name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="identificationnumber != null">
       and  identificationnumber = #{identificationnumber,jdbcType=VARCHAR}
    </if>
    <if test="state != null">
       and  state = #{state,jdbcType=INTEGER}
    </if>
    <if test="taskId != null">
       and  task_id = #{taskId,jdbcType=VARCHAR}
    </if>
    <if test="createTime != null">
       and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null">
       and  update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
     order by id desc 
  </select>
  <select id="selectPaging" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from idcard_validate
    where 1=1 
    <if test="userId != null">
       and  user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="name != null">
       and  name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="identificationnumber != null">
       and  identificationnumber = #{identificationnumber,jdbcType=VARCHAR}
    </if>
    <if test="state != null">
       and  state = #{state,jdbcType=INTEGER}
    </if>
    <if test="taskId != null">
       and  task_id = #{taskId,jdbcType=VARCHAR}
    </if>
    <if test="createTime != null">
       and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null">
       and  update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
     order by id desc limit #{firstResult,jdbcType=INTEGER},#{maxResult,jdbcType=INTEGER}
  </select>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) 
    from idcard_validate 
    where 1=1 
    <if test="userId != null">
       and  user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="name != null">
       and  name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="identificationnumber != null">
       and  identificationnumber = #{identificationnumber,jdbcType=VARCHAR}
    </if>
    <if test="state != null">
       and  state = #{state,jdbcType=INTEGER}
    </if>
    <if test="taskId != null">
       and  task_id = #{taskId,jdbcType=VARCHAR}
    </if>
    <if test="createTime != null">
       and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null">
       and  update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
  </select>
  <select id="queryValidateTimes" parameterType="java.util.Map" resultType="map">
    SELECT COUNT(*) as counts, DATE_FORMAT(create_time, '%Y-%m-%d') as valiDate  FROM idcard_validate
     WHERE user_id=#{userId,jdbcType=INTEGER} and create_time between #{startDate,jdbcType=VARCHAR} and #{currDate,jdbcType=VARCHAR} GROUP BY  valiDate
  </select>
  <select id="selectConditionPaging" parameterType="java.util.Map" resultType="java.util.Map">
    select iv.*,u.phone from idcard_validate iv left join user u on iv.userId=u.id
    where 1=1
    <if test="phone != null">
      and  u.phone = #{phone,jdbcType=VARCHAR}
    </if>
    <if test="state != null">
      and iv.state = #{state,jdbcType=TINYINT}
    </if>
    order by id desc limit #{firstResult,jdbcType=INTEGER},#{maxResult,jdbcType=INTEGER}
  </select>
  <select id="selectConditionCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) from idcard_validate iv left join user u on iv.user_id=u.id
    where 1=1
    <if test="phone != null">
      and  u.phone = #{phone,jdbcType=VARCHAR}
    </if>
    <if test="state != null">
      and iv.state = #{state,jdbcType=TINYINT}
    </if>
  </select>
  <select id="selectCountByTime"  resultType="java.lang.Integer">
    select count(*) from idcard_validate where state = 1 and create_time &gt; #{start} and create_time &lt; #{end}
  </select>
</mapper>