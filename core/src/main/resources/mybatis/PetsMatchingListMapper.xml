<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh.module.dao.PetsMatchingListMapper">
  <resultMap id="BaseResultMap" type="com.zh.module.entity.PetsMatchingList">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pet_list_id" jdbcType="TINYINT" property="petListId" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="buy_user_id" jdbcType="TINYINT" property="buyUserId" />
    <result column="sale_user_id" jdbcType="TINYINT" property="saleUserId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, pet_list_id, level, buy_user_id, sale_user_id, amount, state, create_time, update_time
  </sql>
  <insert id="insert" parameterType="com.zh.module.entity.PetsMatchingList">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pets_matching_list (pet_list_id, level, buy_user_id, 
      sale_user_id, amount, state, 
      create_time, update_time)
    values (#{petListId,jdbcType=TINYINT}, #{level,jdbcType=TINYINT}, #{buyUserId,jdbcType=TINYINT}, 
      #{saleUserId,jdbcType=TINYINT}, #{amount,jdbcType=DECIMAL}, #{state,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zh.module.entity.PetsMatchingList">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pets_matching_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="petListId != null">
        pet_list_id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="buyUserId != null">
        buy_user_id,
      </if>
      <if test="saleUserId != null">
        sale_user_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="petListId != null">
        #{petListId,jdbcType=TINYINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="buyUserId != null">
        #{buyUserId,jdbcType=TINYINT},
      </if>
      <if test="saleUserId != null">
        #{saleUserId,jdbcType=TINYINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zh.module.entity.PetsMatchingList">
    update pets_matching_list
    set pet_list_id = #{petListId,jdbcType=TINYINT},
      level = #{level,jdbcType=TINYINT},
      buy_user_id = #{buyUserId,jdbcType=TINYINT},
      sale_user_id = #{saleUserId,jdbcType=TINYINT},
      amount = #{amount,jdbcType=DECIMAL},
      state = #{state,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zh.module.entity.PetsMatchingList">
    update pets_matching_list
    <set>
      <if test="petListId != null">
        pet_list_id = #{petListId,jdbcType=TINYINT},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="buyUserId != null">
        buy_user_id = #{buyUserId,jdbcType=TINYINT},
      </if>
      <if test="saleUserId != null">
        sale_user_id = #{saleUserId,jdbcType=TINYINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pets_matching_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pets_matching_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pets_matching_list
    where 1=1 
    <if test="petListId != null">
       and  pet_list_id = #{petListId,jdbcType=TINYINT}
    </if>
    <if test="level != null">
       and  level = #{level,jdbcType=TINYINT}
    </if>
    <if test="buyUserId != null">
       and  buy_user_id = #{buyUserId,jdbcType=TINYINT}
    </if>
    <if test="saleUserId != null">
       and  sale_user_id = #{saleUserId,jdbcType=TINYINT}
    </if>
    <if test="amount != null">
       and  amount = #{amount,jdbcType=DECIMAL}
    </if>
    <if test="state != null">
       and  state = #{state,jdbcType=TINYINT}
    </if>
    <if test="createTime != null">
       and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null">
       and  update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
     order by id desc 
  </select>
  <select id="selectPaging" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pets_matching_list
    where 1=1 
    <if test="petListId != null">
       and  pet_list_id = #{petListId,jdbcType=TINYINT}
    </if>
    <if test="level != null">
       and  level = #{level,jdbcType=TINYINT}
    </if>
    <if test="buyUserId != null">
       and  buy_user_id = #{buyUserId,jdbcType=TINYINT}
    </if>
    <if test="saleUserId != null">
       and  sale_user_id = #{saleUserId,jdbcType=TINYINT}
    </if>
    <if test="amount != null">
       and  amount = #{amount,jdbcType=DECIMAL}
    </if>
    <if test="state != null">
       and  state = #{state,jdbcType=TINYINT}
    </if>
    <if test="createTime != null">
       and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null">
       and  update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
     order by id desc limit #{firstResult,jdbcType=INTEGER},#{maxResult,jdbcType=INTEGER}
  </select>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) 
    from pets_matching_list 
    where 1=1 
    <if test="petListId != null">
       and  pet_list_id = #{petListId,jdbcType=TINYINT}
    </if>
    <if test="level != null">
       and  level = #{level,jdbcType=TINYINT}
    </if>
    <if test="buyUserId != null">
       and  buy_user_id = #{buyUserId,jdbcType=TINYINT}
    </if>
    <if test="saleUserId != null">
       and  sale_user_id = #{saleUserId,jdbcType=TINYINT}
    </if>
    <if test="amount != null">
       and  amount = #{amount,jdbcType=DECIMAL}
    </if>
    <if test="state != null">
       and  state = #{state,jdbcType=TINYINT}
    </if>
    <if test="createTime != null">
       and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null">
       and  update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
  </select>
</mapper>