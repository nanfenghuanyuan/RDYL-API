<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh.module.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="com.zh.module.entity.Users">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="order_pwd" jdbcType="VARCHAR" property="orderPwd" />
    <result column="contribution" jdbcType="INTEGER" property="contribution" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="uuid" jdbcType="TINYINT" property="uuid" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, account, phone, password, nick_name, order_pwd, contribution, level, uuid, state, 
    create_time, update_time
  </sql>
  <insert id="insert" parameterType="com.zh.module.entity.Users">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into users (account, phone, password, 
      nick_name, order_pwd, contribution, 
      level, uuid, state, 
      create_time, update_time)
    values (#{account,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{orderPwd,jdbcType=VARCHAR}, #{contribution,jdbcType=INTEGER}, 
      #{level,jdbcType=TINYINT}, #{uuid,jdbcType=TINYINT}, #{state,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zh.module.entity.Users">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="account != null">
        account,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="orderPwd != null">
        order_pwd,
      </if>
      <if test="contribution != null">
        contribution,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="orderPwd != null">
        #{orderPwd,jdbcType=VARCHAR},
      </if>
      <if test="contribution != null">
        #{contribution,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zh.module.entity.Users">
    update users
    set account = #{account,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      order_pwd = #{orderPwd,jdbcType=VARCHAR},
      contribution = #{contribution,jdbcType=INTEGER},
      level = #{level,jdbcType=TINYINT},
      uuid = #{uuid,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zh.module.entity.Users">
    update users
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="orderPwd != null">
        order_pwd = #{orderPwd,jdbcType=VARCHAR},
      </if>
      <if test="contribution != null">
        contribution = #{contribution,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where 1=1 
    <if test="account != null">
       and  account = #{account,jdbcType=VARCHAR}
    </if>
    <if test="phone != null">
       and  phone = #{phone,jdbcType=VARCHAR}
    </if>
    <if test="password != null">
       and  password = #{password,jdbcType=VARCHAR}
    </if>
    <if test="nickName != null">
       and  nick_name = #{nickName,jdbcType=VARCHAR}
    </if>
    <if test="orderPwd != null">
       and  order_pwd = #{orderPwd,jdbcType=VARCHAR}
    </if>
    <if test="contribution != null">
       and  contribution = #{contribution,jdbcType=INTEGER}
    </if>
    <if test="level != null">
       and  level = #{level,jdbcType=TINYINT}
    </if>
    <if test="uuid != null">
       and  uuid = #{uuid,jdbcType=TINYINT}
    </if>
    <if test="state != null">
       and  state = #{state,jdbcType=TINYINT}
    </if>
    <if test="createTime != null">
       and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null">
       and  update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
     order by id desc 
  </select>
  <select id="selectPaging" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where 1=1 
    <if test="account != null">
       and  account = #{account,jdbcType=VARCHAR}
    </if>
    <if test="phone != null">
       and  phone = #{phone,jdbcType=VARCHAR}
    </if>
    <if test="password != null">
       and  password = #{password,jdbcType=VARCHAR}
    </if>
    <if test="nickName != null">
       and  nick_name = #{nickName,jdbcType=VARCHAR}
    </if>
    <if test="orderPwd != null">
       and  order_pwd = #{orderPwd,jdbcType=VARCHAR}
    </if>
    <if test="contribution != null">
       and  contribution = #{contribution,jdbcType=INTEGER}
    </if>
    <if test="level != null">
       and  level = #{level,jdbcType=TINYINT}
    </if>
    <if test="uuid != null">
       and  uuid = #{uuid,jdbcType=TINYINT}
    </if>
    <if test="state != null">
       and  state = #{state,jdbcType=TINYINT}
    </if>
    <if test="createTime != null">
       and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null">
       and  update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
     order by id desc limit #{firstResult,jdbcType=INTEGER},#{maxResult,jdbcType=INTEGER}
  </select>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) 
    from users 
    where 1=1 
    <if test="account != null">
       and  account = #{account,jdbcType=VARCHAR}
    </if>
    <if test="phone != null">
       and  phone = #{phone,jdbcType=VARCHAR}
    </if>
    <if test="password != null">
       and  password = #{password,jdbcType=VARCHAR}
    </if>
    <if test="nickName != null">
       and  nick_name = #{nickName,jdbcType=VARCHAR}
    </if>
    <if test="orderPwd != null">
       and  order_pwd = #{orderPwd,jdbcType=VARCHAR}
    </if>
    <if test="contribution != null">
       and  contribution = #{contribution,jdbcType=INTEGER}
    </if>
    <if test="level != null">
       and  level = #{level,jdbcType=TINYINT}
    </if>
    <if test="uuid != null">
       and  uuid = #{uuid,jdbcType=TINYINT}
    </if>
    <if test="state != null">
       and  state = #{state,jdbcType=TINYINT}
    </if>
    <if test="createTime != null">
       and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null">
       and  update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
  </select>
</mapper>